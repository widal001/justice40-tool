(self.webpackChunkjustice40_tool=self.webpackChunkjustice40_tool||[]).push([[647],{6780:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ components_AlertWrapper; }\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./node_modules/@trussworks/react-uswds/lib/index.js\nvar lib = __webpack_require__(2593);\n// EXTERNAL MODULE: ./node_modules/gatsby-plugin-intl/index.js\nvar gatsby_plugin_intl = __webpack_require__(9703);\n;// CONCATENATED MODULE: ./src/components/AlertWrapper/alertWrapper.module.scss\n// extracted by mini-css-extract-plugin\nvar alertWrapper = "alertWrapper-module--alertWrapper--blPAc";\nvar alertHide = "alertWrapper-module--alertHide--9Ud1N";\nvar alertWarning = "alertWrapper-module--alertWarning--31gxK";\n;// CONCATENATED MODULE: ./src/components/AlertWrapper/index.tsx\nvar AlertWrapper=function AlertWrapper(_ref){var hideWarningAlert=_ref.hideWarningAlert;return/*#__PURE__*/react.createElement("div",{className:alertWrapper},/*#__PURE__*/react.createElement(lib.Alert,{className:\'j40-sitealert\',type:"info"},/*#__PURE__*/react.createElement("span",{className:\'j40-sitealert-title\'},/*#__PURE__*/react.createElement(gatsby_plugin_intl.FormattedMessage,{id:"header.alertTitleBeta",description:\'Alerts that appear on every page - title\',defaultMessage:"Public beta"})," - "),/*#__PURE__*/react.createElement("span",{className:\'j40-sitealert-body\'},/*#__PURE__*/react.createElement(gatsby_plugin_intl.FormattedMessage,{id:"header.alertBodyBeta",description:\'Alerts that appear on every page\',defaultMessage:"This website will be continuously updated"})),/*#__PURE__*/react.createElement("br",null)),/*#__PURE__*/react.createElement(lib.Alert,{className:"j40-sitealert\' "+(hideWarningAlert?alertHide:null)+" "+alertWarning,type:"warning"},/*#__PURE__*/react.createElement("b",null,"Limited data sources \\u2014 "),"This tool currently includes 16 datasets. Over time, datasets could be added, updated, or removed. The datasets come from a variety of sources based on availability, quality, and relevance to environmental, energy, and climate issues. Each dataset has limitations, such as how recently the data was updated."));};;/* harmony default export */ var components_AlertWrapper = (AlertWrapper);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qdXN0aWNlNDAtdG9vbC8uL3NyYy9jb21wb25lbnRzL0FsZXJ0V3JhcHBlci9hbGVydFdyYXBwZXIubW9kdWxlLnNjc3M/ZDhjYiIsIndlYnBhY2s6Ly9qdXN0aWNlNDAtdG9vbC8uL3NyYy9jb21wb25lbnRzL0FsZXJ0V3JhcHBlci9pbmRleC50c3g/NTg5YSJdLCJuYW1lcyI6WyJBbGVydFdyYXBwZXIiLCJoaWRlV2FybmluZ0FsZXJ0Iiwic3R5bGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDTztBQUNBO0FBQ0EsOEQ7O0FDT1AsR0FBTUEsYUFBWSxDQUFHLFFBQWZBLGFBQWUsTUFBMkMsSUFBekNDLGlCQUF5QyxNQUF6Q0EsZ0JBQXlDLENBQzlELG1CQUNFLDJCQUFLLFNBQVMsQ0FBRUMsWUFBaEIsZUFDRSxvQkFBQyxTQUFELEVBQU8sU0FBUyxDQUFFLGVBQWxCLENBQW1DLElBQUksQ0FBQyxNQUF4QyxlQUNFLDRCQUFNLFNBQVMsQ0FBRSxxQkFBakIsZUFBd0Msb0JBQUMsbUNBQUQsRUFDdEMsRUFBRSxDQUFDLHVCQURtQyxDQUV0QyxXQUFXLENBQUUsMENBRnlCLENBR3RDLGNBQWMsY0FId0IsRUFBeEMsT0FERixjQUtFLDRCQUFNLFNBQVMsQ0FBRSxvQkFBakIsZUFDRSxvQkFBQyxtQ0FBRCxFQUNFLEVBQUUsQ0FBQyxzQkFETCxDQUVFLFdBQVcsQ0FBRSxrQ0FGZixDQUdFLGNBQWMsNENBSGhCLEVBREYsQ0FMRixjQVdFLDhCQVhGLENBREYsY0FjRSxvQkFBQyxTQUFELEVBQ0UsU0FBUyxvQkFBb0JELGdCQUFnQixDQUFHQyxTQUFILENBQXNCLElBQTFELE1BQWtFQSxZQUQ3RSxDQUVFLElBQUksQ0FBQyxTQUZQLGVBR0UsNERBSEYsdVRBZEYsQ0FERixDQTJCRCxDQTVCRCxDQTRCRyxDQUVILDREQUFlRixZQUFmIiwiZmlsZSI6IjY3ODAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB2YXIgYWxlcnRXcmFwcGVyID0gXCJhbGVydFdyYXBwZXItbW9kdWxlLS1hbGVydFdyYXBwZXItLWJsUEFjXCI7XG5leHBvcnQgdmFyIGFsZXJ0SGlkZSA9IFwiYWxlcnRXcmFwcGVyLW1vZHVsZS0tYWxlcnRIaWRlLS05VWQxTlwiO1xuZXhwb3J0IHZhciBhbGVydFdhcm5pbmcgPSBcImFsZXJ0V3JhcHBlci1tb2R1bGUtLWFsZXJ0V2FybmluZy0tMzFneEtcIjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtBbGVydH0gZnJvbSAnQHRydXNzd29ya3MvcmVhY3QtdXN3ZHMnO1xuaW1wb3J0IHtGb3JtYXR0ZWRNZXNzYWdlfSBmcm9tICdnYXRzYnktcGx1Z2luLWludGwnO1xuXG5pbXBvcnQgKiBhcyBzdHlsZXMgZnJvbSAnLi9hbGVydFdyYXBwZXIubW9kdWxlLnNjc3MnO1xuXG5pbnRlcmZhY2UgSUFsZXJ0V3JhcHBlclByb3BzIHtcbiAgICBoaWRlV2FybmluZ0FsZXJ0PzogYm9vbGVhblxufVxuXG5jb25zdCBBbGVydFdyYXBwZXIgPSAoe2hpZGVXYXJuaW5nQWxlcnR9OklBbGVydFdyYXBwZXJQcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMuYWxlcnRXcmFwcGVyfT5cbiAgICAgIDxBbGVydCBjbGFzc05hbWU9eydqNDAtc2l0ZWFsZXJ0J30gdHlwZT1cImluZm9cIj5cbiAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXsnajQwLXNpdGVhbGVydC10aXRsZSd9PjxGb3JtYXR0ZWRNZXNzYWdlXG4gICAgICAgICAgaWQ9J2hlYWRlci5hbGVydFRpdGxlQmV0YSdcbiAgICAgICAgICBkZXNjcmlwdGlvbj17J0FsZXJ0cyB0aGF0IGFwcGVhciBvbiBldmVyeSBwYWdlIC0gdGl0bGUnfVxuICAgICAgICAgIGRlZmF1bHRNZXNzYWdlPXtgUHVibGljIGJldGFgfS8+IC0gPC9zcGFuPlxuICAgICAgICA8c3BhbiBjbGFzc05hbWU9eydqNDAtc2l0ZWFsZXJ0LWJvZHknfT5cbiAgICAgICAgICA8Rm9ybWF0dGVkTWVzc2FnZVxuICAgICAgICAgICAgaWQ9J2hlYWRlci5hbGVydEJvZHlCZXRhJ1xuICAgICAgICAgICAgZGVzY3JpcHRpb249eydBbGVydHMgdGhhdCBhcHBlYXIgb24gZXZlcnkgcGFnZSd9XG4gICAgICAgICAgICBkZWZhdWx0TWVzc2FnZT17YFRoaXMgd2Vic2l0ZSB3aWxsIGJlIGNvbnRpbnVvdXNseSB1cGRhdGVkYH0vPlxuICAgICAgICA8L3NwYW4+XG4gICAgICAgIDxici8+XG4gICAgICA8L0FsZXJ0PlxuICAgICAgPEFsZXJ0XG4gICAgICAgIGNsYXNzTmFtZT17YGo0MC1zaXRlYWxlcnQnICR7aGlkZVdhcm5pbmdBbGVydCA/IHN0eWxlcy5hbGVydEhpZGUgOiBudWxsfSAke3N0eWxlcy5hbGVydFdhcm5pbmd9YH1cbiAgICAgICAgdHlwZT1cIndhcm5pbmdcIj5cbiAgICAgICAgPGI+TGltaXRlZCBkYXRhIHNvdXJjZXMg4oCUIDwvYj5cbiAgICAgICAgVGhpcyB0b29sIGN1cnJlbnRseSBpbmNsdWRlcyAxNiBkYXRhc2V0cy4gT3ZlciB0aW1lLCBkYXRhc2V0cyBjb3VsZCBiZVxuICAgICAgICBhZGRlZCwgdXBkYXRlZCwgb3IgcmVtb3ZlZC4gVGhlIGRhdGFzZXRzIGNvbWUgZnJvbSBhIHZhcmlldHkgb2Ygc291cmNlc1xuICAgICAgICBiYXNlZCBvbiBhdmFpbGFiaWxpdHksIHF1YWxpdHksIGFuZCByZWxldmFuY2UgdG8gZW52aXJvbm1lbnRhbCwgZW5lcmd5LFxuICAgICAgICBhbmQgY2xpbWF0ZSBpc3N1ZXMuIEVhY2ggZGF0YXNldCBoYXMgbGltaXRhdGlvbnMsIHN1Y2ggYXMgaG93IHJlY2VudGx5XG4gICAgICAgIHRoZSBkYXRhIHdhcyB1cGRhdGVkLlxuICAgICAgPC9BbGVydD5cbiAgICA8L2Rpdj5cbiAgKTtcbn07IDtcblxuZXhwb3J0IGRlZmF1bHQgQWxlcnRXcmFwcGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///6780\n')},2929:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": function() { return /* binding */ components_J40Alert; }\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./node_modules/gatsby-plugin-intl/index.js\nvar gatsby_plugin_intl = __webpack_require__(9703);\n// EXTERNAL MODULE: ./node_modules/react-intl/lib/index.js + 8 modules\nvar lib = __webpack_require__(4424);\n;// CONCATENATED MODULE: ./src/components/J40Alert/j40Alert.module.scss\n// extracted by mini-css-extract-plugin\nvar j40Alert = "j40Alert-module--j40Alert--2grll";\nvar j40AlertPaddedLeft = "j40Alert-module--j40AlertPaddedLeft--10rSk";\nvar j40AlertNoPaddingLeft = "j40Alert-module--j40AlertNoPaddingLeft--1NKAk";\n;// CONCATENATED MODULE: ./src/components/J40Alert/index.tsx\n// This prop follows an inversion of control pattern allowing the user of this component to specify\n// how it\'s rendered. See more here: https://kentcdodds.com/blog/inversion-of-control\nvar J40Alert=function J40Alert(_ref){var isPaddedLeft=_ref.isPaddedLeft;var intl=(0,gatsby_plugin_intl.useIntl)();var messages=(0,lib/* defineMessages */.vU)({alertMsg:{id:\'datasetAlert.header.alertMsg\',defaultMessage:\'Limited data sources â€” Datasets may be added, updated, or removed.\',description:\'an alert message to inform users that datasets may change\'}});return/*#__PURE__*/react.createElement("div",{className:j40Alert+" "+(isPaddedLeft?j40AlertPaddedLeft:j40AlertNoPaddingLeft)},intl.formatMessage(messages.alertMsg));};/* harmony default export */ var components_J40Alert = (J40Alert);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qdXN0aWNlNDAtdG9vbC8uL3NyYy9jb21wb25lbnRzL0o0MEFsZXJ0L2o0MEFsZXJ0Lm1vZHVsZS5zY3NzPzE2MDQiLCJ3ZWJwYWNrOi8vanVzdGljZTQwLXRvb2wvLi9zcmMvY29tcG9uZW50cy9KNDBBbGVydC9pbmRleC50c3g/OTJkMiJdLCJuYW1lcyI6WyJKNDBBbGVydCIsImlzUGFkZGVkTGVmdCIsImludGwiLCJ1c2VJbnRsIiwibWVzc2FnZXMiLCJkZWZpbmVNZXNzYWdlcyIsImFsZXJ0TXNnIiwiaWQiLCJkZWZhdWx0TWVzc2FnZSIsImRlc2NyaXB0aW9uIiwic3R5bGVzIiwiZm9ybWF0TWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ087QUFDQTtBQUNBLDRFOztBQ0dQO0FBQ0E7QUFLQSxHQUFNQSxTQUFRLENBQUcsUUFBWEEsU0FBVyxNQUFvQyxJQUFsQ0MsYUFBa0MsTUFBbENBLFlBQWtDLENBQ25ELEdBQU1DLEtBQUksQ0FBR0MsOEJBQU8sRUFBcEIsQ0FDQSxHQUFNQyxTQUFRLENBQUdDLDhCQUFjLENBQUMsQ0FDOUJDLFFBQVEsQ0FBRSxDQUNSQyxFQUFFLENBQUUsOEJBREksQ0FFUkMsY0FBYyxDQUNaLG9FQUhNLENBSVJDLFdBQVcsQ0FBRSwyREFKTCxDQURvQixDQUFELENBQS9CLENBU0EsbUJBQ0UsMkJBQUssU0FBUyxDQUFLQyxRQUFMLE1BQXdCVCxZQUFZLENBQUdTLGtCQUFILENBQStCQSxxQkFBbkUsQ0FBZCxFQUNHUixJQUFJLENBQUNTLGFBQUwsQ0FBbUJQLFFBQVEsQ0FBQ0UsUUFBNUIsQ0FESCxDQURGLENBS0QsQ0FoQkQsQ0FrQkEsd0RBQWVOLFFBQWYiLCJmaWxlIjoiMjkyOS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHZhciBqNDBBbGVydCA9IFwiajQwQWxlcnQtbW9kdWxlLS1qNDBBbGVydC0tMmdybGxcIjtcbmV4cG9ydCB2YXIgajQwQWxlcnRQYWRkZWRMZWZ0ID0gXCJqNDBBbGVydC1tb2R1bGUtLWo0MEFsZXJ0UGFkZGVkTGVmdC0tMTByU2tcIjtcbmV4cG9ydCB2YXIgajQwQWxlcnROb1BhZGRpbmdMZWZ0ID0gXCJqNDBBbGVydC1tb2R1bGUtLWo0MEFsZXJ0Tm9QYWRkaW5nTGVmdC0tMU5LQWtcIjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHt1c2VJbnRsfSBmcm9tICdnYXRzYnktcGx1Z2luLWludGwnO1xuaW1wb3J0IHtkZWZpbmVNZXNzYWdlc30gZnJvbSAncmVhY3QtaW50bCc7XG5cbmltcG9ydCAqIGFzIHN0eWxlcyBmcm9tICcuL2o0MEFsZXJ0Lm1vZHVsZS5zY3NzJztcblxuLy8gVGhpcyBwcm9wIGZvbGxvd3MgYW4gaW52ZXJzaW9uIG9mIGNvbnRyb2wgcGF0dGVybiBhbGxvd2luZyB0aGUgdXNlciBvZiB0aGlzIGNvbXBvbmVudCB0byBzcGVjaWZ5XG4vLyBob3cgaXQncyByZW5kZXJlZC4gU2VlIG1vcmUgaGVyZTogaHR0cHM6Ly9rZW50Y2RvZGRzLmNvbS9ibG9nL2ludmVyc2lvbi1vZi1jb250cm9sXG5pbnRlcmZhY2UgSUo0MEFsZXJ0UHJvcHMge1xuICBpc1BhZGRlZExlZnQ6IGJvb2xlYW47XG59XG5cbmNvbnN0IEo0MEFsZXJ0ID0gKHtpc1BhZGRlZExlZnR9OiBJSjQwQWxlcnRQcm9wcykgPT4ge1xuICBjb25zdCBpbnRsID0gdXNlSW50bCgpO1xuICBjb25zdCBtZXNzYWdlcyA9IGRlZmluZU1lc3NhZ2VzKHtcbiAgICBhbGVydE1zZzoge1xuICAgICAgaWQ6ICdkYXRhc2V0QWxlcnQuaGVhZGVyLmFsZXJ0TXNnJyxcbiAgICAgIGRlZmF1bHRNZXNzYWdlOlxuICAgICAgICAnTGltaXRlZCBkYXRhIHNvdXJjZXMg4oCUIERhdGFzZXRzIG1heSBiZSBhZGRlZCwgdXBkYXRlZCwgb3IgcmVtb3ZlZC4nLFxuICAgICAgZGVzY3JpcHRpb246ICdhbiBhbGVydCBtZXNzYWdlIHRvIGluZm9ybSB1c2VycyB0aGF0IGRhdGFzZXRzIG1heSBjaGFuZ2UnLFxuICAgIH0sXG4gIH0pO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2Ake3N0eWxlcy5qNDBBbGVydH0gJHtpc1BhZGRlZExlZnQgPyBzdHlsZXMuajQwQWxlcnRQYWRkZWRMZWZ0IDogc3R5bGVzLmo0MEFsZXJ0Tm9QYWRkaW5nTGVmdH1gfT5cbiAgICAgIHtpbnRsLmZvcm1hdE1lc3NhZ2UobWVzc2FnZXMuYWxlcnRNc2cpfVxuICAgIDwvZGl2PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgSjQwQWxlcnQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2929\n')},6445:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7294);\n/* harmony import */ var _trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2593);\n/* harmony import */ var _trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_1__);\n// Trussworks GridContainer won't allow it to span 100% of the page, so\n// this works around it and tries to hide the complexity in component\nvar J40MainGridContainer=function J40MainGridContainer(_ref){var children=_ref.children,_ref$fullWidth=_ref.fullWidth,fullWidth=_ref$fullWidth===void 0?false:_ref$fullWidth,_ref$blueBackground=_ref.blueBackground,blueBackground=_ref$blueBackground===void 0?false:_ref$blueBackground,_ref$className=_ref.className,className=_ref$className===void 0?'j40-grid-container ':_ref$className;// is it a blue background strip?\nclassName+=blueBackground?'j40-main-grid-blue-bk ':'';return fullWidth?/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\",{className:'j40-grid-container '+className},children):/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_trussworks_react_uswds__WEBPACK_IMPORTED_MODULE_1__.GridContainer,{containerSize:'desktop-lg',className:'j40-grid-container '+className},children);};/* harmony default export */ __webpack_exports__[\"Z\"] = (J40MainGridContainer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qdXN0aWNlNDAtdG9vbC8uL3NyYy9jb21wb25lbnRzL0o0ME1haW5HcmlkQ29udGFpbmVyLnRzeD84ODk4Il0sIm5hbWVzIjpbIko0ME1haW5HcmlkQ29udGFpbmVyIiwiY2hpbGRyZW4iLCJmdWxsV2lkdGgiLCJibHVlQmFja2dyb3VuZCIsImNsYXNzTmFtZSJdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTtBQVdBLEdBQU1BLHFCQUFvQixDQUFHLFFBQXZCQSxxQkFBdUIsTUFJMEIsSUFIckRDLFNBR3FELE1BSHJEQSxRQUdxRCxxQkFGckRDLFNBRXFELENBRnJEQSxTQUVxRCx5QkFGekMsS0FFeUMseUNBRHJEQyxjQUNxRCxDQURyREEsY0FDcUQsOEJBRHBDLEtBQ29DLHlDQUFyREMsU0FBcUQsQ0FBckRBLFNBQXFELHlCQUF6QyxxQkFBeUMsZ0JBQ3JEO0FBQ0FBLFNBQVMsRUFBS0QsY0FBYyxDQUFHLHdCQUFILENBQThCLEVBQTFELENBRUEsTUFBT0QsVUFBUyxjQUNkLHdEQUNFLFNBQVMsQ0FBRSxzQkFBd0JFLFNBRHJDLEVBRUdILFFBRkgsQ0FEYyxjQU1kLGlEQUFDLGtFQUFELEVBQ0UsYUFBYSxDQUFFLFlBRGpCLENBRUUsU0FBUyxDQUFFLHNCQUF3QkcsU0FGckMsRUFHR0gsUUFISCxDQU5GLENBWUQsQ0FwQkQsQ0FzQkEseURBQWVELG9CQUFmIiwiZmlsZSI6IjY0NDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUcnVzc3dvcmtzIEdyaWRDb250YWluZXIgd29uJ3QgYWxsb3cgaXQgdG8gc3BhbiAxMDAlIG9mIHRoZSBwYWdlLCBzb1xuLy8gdGhpcyB3b3JrcyBhcm91bmQgaXQgYW5kIHRyaWVzIHRvIGhpZGUgdGhlIGNvbXBsZXhpdHkgaW4gY29tcG9uZW50XG5pbXBvcnQgUmVhY3QsIHtSZWFjdE5vZGV9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7R3JpZENvbnRhaW5lcn0gZnJvbSAnQHRydXNzd29ya3MvcmVhY3QtdXN3ZHMnO1xuXG5pbnRlcmZhY2UgSUxheW91dFByb3BzIHtcbiAgY2hpbGRyZW46IFJlYWN0Tm9kZSxcbiAgZnVsbFdpZHRoPzogYm9vbGVhbixcbiAgIGJsdWVCYWNrZ3JvdW5kPzogYm9vbGVhbixcbiAgY2xhc3NOYW1lPzogc3RyaW5nXG59XG5cbmNvbnN0IEo0ME1haW5HcmlkQ29udGFpbmVyID0gKHtcbiAgY2hpbGRyZW4sXG4gIGZ1bGxXaWR0aCA9IGZhbHNlLFxuICBibHVlQmFja2dyb3VuZCA9IGZhbHNlLFxuICBjbGFzc05hbWUgPSAnajQwLWdyaWQtY29udGFpbmVyICd9OiBJTGF5b3V0UHJvcHMpID0+IHtcbiAgLy8gaXMgaXQgYSBibHVlIGJhY2tncm91bmQgc3RyaXA/XG4gIGNsYXNzTmFtZSArPSAoYmx1ZUJhY2tncm91bmQgPyAnajQwLW1haW4tZ3JpZC1ibHVlLWJrICcgOiAnJyk7XG5cbiAgcmV0dXJuIGZ1bGxXaWR0aCA/IChcbiAgICA8ZGl2XG4gICAgICBjbGFzc05hbWU9eydqNDAtZ3JpZC1jb250YWluZXIgJyArIGNsYXNzTmFtZX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9kaXY+XG4gICkgOiAoXG4gICAgPEdyaWRDb250YWluZXJcbiAgICAgIGNvbnRhaW5lclNpemU9eydkZXNrdG9wLWxnJ31cbiAgICAgIGNsYXNzTmFtZT17J2o0MC1ncmlkLWNvbnRhaW5lciAnICsgY2xhc3NOYW1lfT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0dyaWRDb250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBKNDBNYWluR3JpZENvbnRhaW5lcjtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6445\n")},2881:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": function() { return /* binding */ methodology; }\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(7294);\n// EXTERNAL MODULE: ./node_modules/@trussworks/react-uswds/lib/index.js\nvar lib = __webpack_require__(2593);\n// EXTERNAL MODULE: ./src/components/AlertWrapper/index.tsx + 1 modules\nvar AlertWrapper = __webpack_require__(6780);\n// EXTERNAL MODULE: ./node_modules/gatsby-plugin-intl/index.js\nvar gatsby_plugin_intl = __webpack_require__(9703);\n// EXTERNAL MODULE: ./node_modules/react-intl/lib/index.js + 8 modules\nvar react_intl_lib = __webpack_require__(4424);\n;// CONCATENATED MODULE: ./src/components/DatasetCard/datasetCard.module.scss\n// extracted by mini-css-extract-plugin\nvar datasetCard = "datasetCard-module--datasetCard--26okZ";\nvar datasetCardIndicator = "datasetCard-module--datasetCardIndicator--14lIn";\nvar datasetCardWhatIsIt = "datasetCard-module--datasetCardWhatIsIt--2J87w";\nvar datasetCardList = "datasetCard-module--datasetCardList--Ok3_o";\nvar datasetCardListItem = "datasetCard-module--datasetCardListItem--rMDxc";\nvar datasetCardDescription = "datasetCard-module--datasetCardDescription--2agib";\nvar datasetCardLabels = "datasetCard-module--datasetCardLabels--3jLC0";\n;// CONCATENATED MODULE: ./src/components/DatasetCard/index.tsx\nvar DatasetCard=function DatasetCard(_ref){var datasetCardProps=_ref.datasetCardProps;var intl=(0,gatsby_plugin_intl.useIntl)();var messages=(0,react_intl_lib/* defineMessages */.vU)({whatIsIt:{id:\'datasetCard.whatIsIt\',defaultMessage:\'What is it?\',description:\'label associated with explaining the card\'},dataResolution:{id:\'datasetCard.dataResolution\',defaultMessage:\'Data resolution: \',description:\'label associated with explaining the card\'},dataSource:{id:\'datasetCard.dataSource\',defaultMessage:\'Data source: \',description:\'label associated with explaining the card\'},dataDateRange:{id:\'datasetCard.dataDateRange\',defaultMessage:\'Data date range: \',description:\'label associated with explaining the card\'}});return/*#__PURE__*/react.createElement("div",{className:datasetCard},/*#__PURE__*/react.createElement("h3",{className:datasetCardIndicator},datasetCardProps.indicator),/*#__PURE__*/react.createElement("div",{className:datasetCardWhatIsIt},intl.formatMessage(messages.whatIsIt)),/*#__PURE__*/react.createElement("div",{className:datasetCardDescription},datasetCardProps.description),/*#__PURE__*/react.createElement("ul",{className:datasetCardList},/*#__PURE__*/react.createElement("li",{className:datasetCardListItem},/*#__PURE__*/react.createElement("span",{className:datasetCardLabels},intl.formatMessage(messages.dataResolution)),datasetCardProps.dataResolution),/*#__PURE__*/react.createElement("li",{className:datasetCardListItem},/*#__PURE__*/react.createElement("span",{className:datasetCardLabels},intl.formatMessage(messages.dataSource)),/*#__PURE__*/react.createElement("a",{href:datasetCardProps.dataSourceURL,target:\'_blank\',rel:"noreferrer"},datasetCardProps.dataSourceLabel)),/*#__PURE__*/react.createElement("li",{className:datasetCardListItem},/*#__PURE__*/react.createElement("span",{className:datasetCardLabels},intl.formatMessage(messages.dataDateRange)),datasetCardProps.dataDateRange)));};/* harmony default export */ var components_DatasetCard = (DatasetCard);\n// EXTERNAL MODULE: ./src/components/J40Alert/index.tsx + 1 modules\nvar J40Alert = __webpack_require__(2929);\n;// CONCATENATED MODULE: ./src/components/DatasetContainer/dsContainer.module.scss\n// extracted by mini-css-extract-plugin\nvar datasetContainer = "dsContainer-module--datasetContainer--2_KuU";\nvar datasetContainerHeader = "dsContainer-module--datasetContainerHeader--2HV3A";\nvar datasetContainerSubTitle = "dsContainer-module--datasetContainerSubTitle--3fi8f";\nvar datasetCardsContainer = "dsContainer-module--datasetCardsContainer--129oj";\nvar j40AlertContainer = "dsContainer-module--j40AlertContainer--tiBoq";\n;// CONCATENATED MODULE: ./src/components/DatasetContainer/index.tsx\nvar cards=[{indicator:\'Poverty\',description:"Percent of a block group\'s population in households where the household \\n    income is less than or equal to twice the federal \\"poverty level\\"",dataResolution:"Census block group",dataSourceLabel:"U.S. Census Bureau",dataSourceURL:"https://www.census.gov/",dataDateRange:"5-year estimates, 2015-2019"},{indicator:\'Education (less than high school)\',description:"Percent of people age 25 or older in a block group whose education is short of a high school diploma",dataResolution:"Census block group",dataSourceLabel:"U.S. Census Bureau",dataSourceURL:"https://www.census.gov/",dataDateRange:"5-year estimates, 2015-2019"},{indicator:\'Linguistic isolation\',description:"Percent of people in a block group living in linguistically \\n    isolated households \\u2014 a linguistically isolated household is a household in \\n    which all members aged 14 years and over speak a non-English language and also speak \\n    English less than \\"very well\\" (i.e., have difficulty with English)",dataResolution:"Census block group",dataSourceLabel:"U.S. Census Bureau",dataSourceURL:"https://www.census.gov/",dataDateRange:"5-year estimates, 2015-2019"},{indicator:\'Unemployment rate\',description:"Unemployment rate (people who are unemployed divided by the total population of \\n      people in the labor force over 16 years old)",dataResolution:"Census block group",dataSourceLabel:"U.S. Census Bureau",dataSourceURL:"https://www.census.gov/",dataDateRange:"5-year estimates, 2015-2019"},{indicator:\'Housing burden\',description:"Percent of households in a census tract that are both low income (making less\\n       than 80% of the HUD Area Median Family Income) and severely burdened by housing costs \\n       (paying greater than 30% of their income to housing costs)",dataResolution:"Census block group",dataSourceLabel:"U.S. Census Bureau",dataSourceURL:"https://www.census.gov/",dataDateRange:"5-year estimates, 2015-2019"}];var DatasetContainer=function DatasetContainer(){var intl=(0,gatsby_plugin_intl.useIntl)();var messages=(0,react_intl_lib/* defineMessages */.vU)({cumulativeScore:{id:\'datasetContainer.header.cumulativeScore\',defaultMessage:\'Datasets used in cumulative score\',description:\'section label of which datasets are used in cumulative score\'},subTitle:{id:\'datasetContainer.subTitle\',defaultMessage:\'The datasets come from a variety of sources and \'+\'were selected after considering relevance, availability, recency and quality.\',description:\'description of the dataset section\'}});return/*#__PURE__*/react.createElement("div",{className:datasetContainer+" desktop:grid-col"},/*#__PURE__*/react.createElement("div",{className:j40AlertContainer+" desktop:grid-col"},/*#__PURE__*/react.createElement("div",{className:\'grid-container-desktop-lg\'},/*#__PURE__*/react.createElement(J40Alert/* default */.Z,{isPaddedLeft:false}))),/*#__PURE__*/react.createElement("div",{className:\'grid-container-desktop-lg\'},/*#__PURE__*/react.createElement("h1",{className:datasetContainerHeader},intl.formatMessage(messages.cumulativeScore)),/*#__PURE__*/react.createElement("p",{className:datasetContainerSubTitle},intl.formatMessage(messages.subTitle)),/*#__PURE__*/react.createElement("div",{className:datasetCardsContainer},cards.map(function(card){return/*#__PURE__*/react.createElement(components_DatasetCard,{key:card.indicator,datasetCardProps:card});}))));};/* harmony default export */ var components_DatasetContainer = (DatasetContainer);\n// EXTERNAL MODULE: ./src/components/J40MainGridContainer.tsx\nvar J40MainGridContainer = __webpack_require__(6445);\n// EXTERNAL MODULE: ./src/components/layout.tsx + 4 modules\nvar layout = __webpack_require__(828);\n;// CONCATENATED MODULE: ./src/components/scoreStepsList.tsx\nvar ScoreStepsList=function ScoreStepsList(){return/*#__PURE__*/react.createElement(react.Fragment,null,/*#__PURE__*/react.createElement("div",{className:\'j40-process-list-wrapper\'},/*#__PURE__*/react.createElement("ul",null,/*#__PURE__*/react.createElement("li",null,/*#__PURE__*/react.createElement("section",null,/*#__PURE__*/react.createElement("h3",{className:\'j40-item-list-title\'},"Gather datasets"),/*#__PURE__*/react.createElement("h4",{className:\'j40-item-list-subtitle\'},"Data inputs"),/*#__PURE__*/react.createElement("p",null,"The cumulative index score includes the following equally weighted inputs."),/*#__PURE__*/react.createElement("ul",{className:\'j40-process-nested-list\'},/*#__PURE__*/react.createElement("li",null,"Poverty"),/*#__PURE__*/react.createElement("li",null,"Less than high school education"),/*#__PURE__*/react.createElement("li",null,"Linguistic isolation"),/*#__PURE__*/react.createElement("li",null,"Unemployment rate"),/*#__PURE__*/react.createElement("li",null,"Housing burden")),/*#__PURE__*/react.createElement("h4",{className:\'j40-item-list-subtitle\'},"Combining data from different geographic units"),/*#__PURE__*/react.createElement("p",null,"Some data is not available at the census block group level and is instead only available for larger units such as census tracts or counties. In these cases, all census block groups will get an even contribution from the larger unit. For example, if a census tract scores 90th percentile on an indicator, then all census block groups within that tract will receive a value of 90th percentile."),/*#__PURE__*/react.createElement("h4",{className:\'j40-item-list-subtitle\'},"Normalizing data"),/*#__PURE__*/react.createElement("p",null,"The range of the data that makes up the score varies, so the data must be normalized so that each data indicator can be more equally weighted. Min-max normalization is utilized, where the minimum value in the range of values for each dataset is set at 0, the maximum value is set at 1, and every other value is transformed into a decimal between 0 and 1. For example, if the minimum value for unemployment was 10 and the maximum value was 30, a value of 20 would be transformed to 0.5 since it is halfway between 10 and 30."))),/*#__PURE__*/react.createElement("li",null,/*#__PURE__*/react.createElement("section",null,/*#__PURE__*/react.createElement("h3",null,"Calculate cumulative index score"),/*#__PURE__*/react.createElement("p",null,"To combine all variables into a single cumulative index score, we average the normalized values across indicators."),/*#__PURE__*/react.createElement(lib.GridContainer,{className:\'\'},/*#__PURE__*/react.createElement(lib.Grid,{row:true,className:\'j40-math-division-container\'},/*#__PURE__*/react.createElement(lib.Grid,{col:true,className:\'j40-math-eq-left-side grid-col-fill\'},/*#__PURE__*/react.createElement("div",{className:\'j40-math-eq-numerator\'},"Dataset 1 + Dataset 2 + ... + Dataset N"),/*#__PURE__*/react.createElement("div",{className:\'j40-math-eq-denominator\'},"# of datasets")),/*#__PURE__*/react.createElement(lib.Grid,{col:true,className:\'j40-math-eq-middle grid-col-auto\'},"="),/*#__PURE__*/react.createElement(lib.Grid,{col:true,className:\'j40-math-eq-right-side grid-col-fill\'},"Cumulative index score"))))),/*#__PURE__*/react.createElement("li",null,/*#__PURE__*/react.createElement("section",null,/*#__PURE__*/react.createElement("h3",{className:\'j40-item-list-title\'},"Assign priority"),/*#__PURE__*/react.createElement("p",null,"Census block groups are sorted by their cumulative index score from highest to lowest. Census block groups that are in the top 25 percentile (i.e. have a cumulative index score in the 75 - 100th percentile) will be considered the prioritized communities."))))));};/* harmony default export */ var scoreStepsList = (ScoreStepsList);\n;// CONCATENATED MODULE: ./src/pages/methodology.tsx\n// markup\nvar IndexPage=function IndexPage(_ref){var location=_ref.location;return/*#__PURE__*/react.createElement(layout/* default */.Z,{location:location},/*#__PURE__*/react.createElement(J40MainGridContainer/* default */.Z,{fullWidth:true},/*#__PURE__*/react.createElement(AlertWrapper/* default */.Z,{hideWarningAlert:true})),/*#__PURE__*/react.createElement(J40MainGridContainer/* default */.Z,{className:\'j40-main-content\'},/*#__PURE__*/react.createElement(lib.Grid,{row:true},/*#__PURE__*/react.createElement(lib.Grid,{col:true},/*#__PURE__*/react.createElement("section",null,/*#__PURE__*/react.createElement("h1",null,"Methodology"),/*#__PURE__*/react.createElement("p",null,"The Just Progress tool combines demographic, environmental, and socio-economic data to generate a cumulative index score, referred to as the Just Progress Index. The tool currently utilizes national, publically-available data from the United States Census Bureau\\u2019s American Community Survey (ACS) and the EPA\\u2019s EJScreen tool."),/*#__PURE__*/react.createElement("p",null,"The various inputs into the Just Progress Index are averaged into 2 categories: Pollution Burden and Demographics."),/*#__PURE__*/react.createElement("p",null,"Pollution Burden: health risks arising from proximity and potential exposures to pollution and other adverse environmental conditions"),/*#__PURE__*/react.createElement("p",null,"Demographics: sensitive populations and socioeconomic factors that make a community more vulnerable"),/*#__PURE__*/react.createElement("p",null,/*#__PURE__*/react.createElement("b",null,"Pollution Burden average x Demographics average = Just Progress Index")))))),/*#__PURE__*/react.createElement(J40MainGridContainer/* default */.Z,{fullWidth:true},/*#__PURE__*/react.createElement(lib.Grid,{row:true},/*#__PURE__*/react.createElement(lib.Grid,{col:true},/*#__PURE__*/react.createElement(components_DatasetContainer,null)))),/*#__PURE__*/react.createElement(J40MainGridContainer/* default */.Z,null,/*#__PURE__*/react.createElement(lib.Grid,{row:true},/*#__PURE__*/react.createElement(lib.Grid,{col:true},/*#__PURE__*/react.createElement(scoreStepsList,null)))));};/* harmony default export */ var methodology = (IndexPage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2881\n')}}]);